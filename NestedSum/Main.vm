// Main.vm

// Suma total = sum_{i=0..n} ( i^2 + 1 )
// Argumento: n estÃ¡ en argument 0

function Main.computeSum 2
// locals: local 0 = sum, local 1 = i
push constant 0
pop local 0           // sum = 0
push constant 0
pop local 1           // i = 0

label Main$LOOP
// if (i > n) goto END
push local 1
push argument 0
gt
if-goto Main$END

// term = addOne(square(i))
push local 1
call Main.square 1     // stack: [..., i^2]
call Main.addOne 1     // stack: [..., i^2+1]

// sum += term
push local 0
add
pop local 0

// i = i + 1
push local 1
push constant 1
add
pop local 1

goto Main$LOOP
label Main$END
push local 0
return


// -----------------------------
// Cuadrado por sumas sucesivas
// square(x) = x*x
// locals: res, cnt
function Main.square 2
push constant 0
pop local 0           // res = 0
push argument 0
pop local 1           // cnt = x

label Main$sq_loop
// while (cnt > 0)
push local 1
push constant 0
gt
if-goto Main$sq_body
goto Main$sq_end

label Main$sq_body
// res += x
push local 0
push argument 0
add
pop local 0
// cnt--
push local 1
push constant 1
sub
pop local 1
goto Main$sq_loop

label Main$sq_end
push local 0
return


// -----------------------------
// addOne(x) = x + 1
function Main.addOne 0
push argument 0
push constant 1
add
return
